"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.1
//   protoc               v3.14.0
// source: product.proto
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductServiceClient = exports.ProductServiceService = exports.GetAllProductsRes = exports.GetAllProductsReq = exports.CreateProductRes = exports.CreateProductReq = exports.Product = exports.createBaseProduct = exports.protobufPackage = void 0;
/* eslint-disable */
const grpc_js_1 = require("@grpc/grpc-js");
const minimal_1 = __importDefault(require("protobufjs/minimal"));
const attachment_1 = require("./attachment");
const error_1 = require("./error");
const any_1 = require("./google/protobuf/any");
const timestamp_1 = require("./google/protobuf/timestamp");
const util_1 = require("../../grpc/util");
exports.protobufPackage = "";
function createBaseProduct() {
    return {
        id: 0,
        specs: undefined,
        subs: [],
        parent: undefined,
        attachments: [],
        userId: undefined,
        createdAt: undefined,
        updatedAt: undefined,
    };
}
exports.createBaseProduct = createBaseProduct;
exports.Product = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.id !== 0) {
            writer.uint32(8).int32(message.id);
        }
        if (message.specs !== undefined) {
            any_1.Any.encode(message.specs, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.subs) {
            exports.Product.encode(v, writer.uint32(26).fork()).ldelim();
        }
        if (message.parent !== undefined) {
            exports.Product.encode(message.parent, writer.uint32(34).fork()).ldelim();
        }
        for (const v of message.attachments) {
            attachment_1.Attachment.encode(v, writer.uint32(42).fork()).ldelim();
        }
        if (message.userId !== undefined) {
            writer.uint32(48).int32(message.userId);
        }
        if (message.createdAt !== undefined) {
            timestamp_1.Timestamp.encode(toTimestamp(message.createdAt), writer.uint32(58).fork()).ldelim();
        }
        if (message.updatedAt !== undefined) {
            timestamp_1.Timestamp.encode(toTimestamp(message.updatedAt), writer.uint32(66).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseProduct();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.id = reader.int32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.specs = any_1.Any.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.subs.push(exports.Product.decode(reader, reader.uint32()));
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.parent = exports.Product.decode(reader, reader.uint32());
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.attachments.push(attachment_1.Attachment.decode(reader, reader.uint32()));
                    continue;
                case 6:
                    if (tag !== 48) {
                        break;
                    }
                    message.userId = reader.int32();
                    continue;
                case 7:
                    if (tag !== 58) {
                        break;
                    }
                    message.createdAt = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));
                    continue;
                case 8:
                    if (tag !== 66) {
                        break;
                    }
                    message.updatedAt = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            id: isSet(object.id) ? globalThis.Number(object.id) : 0,
            specs: isSet(object.specs) ? any_1.Any.fromJSON(object.specs) : undefined,
            subs: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.subs) ? object.subs.map((e) => exports.Product.fromJSON(e)) : [],
            parent: isSet(object.parent) ? exports.Product.fromJSON(object.parent) : undefined,
            attachments: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.attachments)
                ? object.attachments.map((e) => attachment_1.Attachment.fromJSON(e))
                : [],
            userId: isSet(object.userId) ? globalThis.Number(object.userId) : undefined,
            createdAt: isSet(object.createdAt) ? fromJsonTimestamp(object.createdAt) : undefined,
            updatedAt: isSet(object.updatedAt) ? fromJsonTimestamp(object.updatedAt) : undefined,
        };
    },
    toJSON(message) {
        var _a, _b;
        const obj = {};
        if (message.id !== 0) {
            obj.id = Math.round(message.id);
        }
        if (message.specs !== undefined) {
            obj.specs = any_1.Any.toJSON(message.specs);
        }
        if ((_a = message.subs) === null || _a === void 0 ? void 0 : _a.length) {
            obj.subs = message.subs.map((e) => exports.Product.toJSON(e));
        }
        if (message.parent !== undefined) {
            obj.parent = exports.Product.toJSON(message.parent);
        }
        if ((_b = message.attachments) === null || _b === void 0 ? void 0 : _b.length) {
            obj.attachments = message.attachments.map((e) => attachment_1.Attachment.toJSON(e));
        }
        if (message.userId !== undefined) {
            obj.userId = Math.round(message.userId);
        }
        if (message.createdAt !== undefined) {
            obj.createdAt = (0, util_1.dateToReadable)(message.createdAt.toISOString());
        }
        if (message.updatedAt !== undefined) {
            obj.updatedAt = (0, util_1.dateToReadable)(message.updatedAt.toISOString());
        }
        return obj;
    },
    create(base) {
        return exports.Product.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c, _d, _e, _f;
        const message = createBaseProduct();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : 0;
        message.specs = (object.specs !== undefined && object.specs !== null) ? any_1.Any.fromPartial(object.specs) : undefined;
        message.subs = ((_b = object.subs) === null || _b === void 0 ? void 0 : _b.map((e) => exports.Product.fromPartial(e))) || [];
        message.parent = (object.parent !== undefined && object.parent !== null)
            ? exports.Product.fromPartial(object.parent)
            : undefined;
        message.attachments = ((_c = object.attachments) === null || _c === void 0 ? void 0 : _c.map((e) => attachment_1.Attachment.fromPartial(e))) || [];
        message.userId = (_d = object.userId) !== null && _d !== void 0 ? _d : undefined;
        message.createdAt = (_e = object.createdAt) !== null && _e !== void 0 ? _e : undefined;
        message.updatedAt = (_f = object.updatedAt) !== null && _f !== void 0 ? _f : undefined;
        return message;
    },
};
function createBaseCreateProductReq() {
    return { userId: 0, product: undefined };
}
exports.CreateProductReq = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.userId !== 0) {
            writer.uint32(8).int32(message.userId);
        }
        if (message.product !== undefined) {
            exports.Product.encode(message.product, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCreateProductReq();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.userId = reader.int32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.product = exports.Product.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            userId: isSet(object.userId) ? globalThis.Number(object.userId) : 0,
            product: isSet(object.product) ? exports.Product.fromJSON(object.product) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.userId !== 0) {
            obj.userId = Math.round(message.userId);
        }
        if (message.product !== undefined) {
            obj.product = exports.Product.toJSON(message.product);
        }
        return obj;
    },
    create(base) {
        return exports.CreateProductReq.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseCreateProductReq();
        message.userId = (_a = object.userId) !== null && _a !== void 0 ? _a : 0;
        message.product = (object.product !== undefined && object.product !== null)
            ? exports.Product.fromPartial(object.product)
            : undefined;
        return message;
    },
};
function createBaseCreateProductRes() {
    return { userId: undefined, product: undefined };
}
exports.CreateProductRes = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.userId !== undefined) {
            writer.uint32(8).int32(message.userId);
        }
        if (message.product !== undefined) {
            exports.Product.encode(message.product, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCreateProductRes();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.userId = reader.int32();
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.product = exports.Product.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            userId: isSet(object.userId) ? globalThis.Number(object.userId) : undefined,
            product: isSet(object.product) ? exports.Product.fromJSON(object.product) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.userId !== undefined) {
            obj.userId = Math.round(message.userId);
        }
        if (message.product !== undefined) {
            obj.product = exports.Product.toJSON(message.product);
        }
        return obj;
    },
    create(base) {
        return exports.CreateProductRes.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseCreateProductRes();
        message.userId = (_a = object.userId) !== null && _a !== void 0 ? _a : undefined;
        message.product = (object.product !== undefined && object.product !== null)
            ? exports.Product.fromPartial(object.product)
            : undefined;
        return message;
    },
};
function createBaseGetAllProductsReq() {
    return { userId: undefined };
}
exports.GetAllProductsReq = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.userId !== undefined) {
            writer.uint32(8).int32(message.userId);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetAllProductsReq();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.userId = reader.int32();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { userId: isSet(object.userId) ? globalThis.Number(object.userId) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.userId !== undefined) {
            obj.userId = Math.round(message.userId);
        }
        return obj;
    },
    create(base) {
        return exports.GetAllProductsReq.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseGetAllProductsReq();
        message.userId = (_a = object.userId) !== null && _a !== void 0 ? _a : undefined;
        return message;
    },
};
function createBaseGetAllProductsRes() {
    return { products: [], error: undefined };
}
exports.GetAllProductsRes = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        for (const v of message.products) {
            exports.Product.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.error !== undefined) {
            error_1.Error.encode(message.error, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : minimal_1.default.Reader.create(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetAllProductsRes();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.products.push(exports.Product.decode(reader, reader.uint32()));
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.error = error_1.Error.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skipType(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            products: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.products) ? object.products.map((e) => exports.Product.fromJSON(e)) : [],
            error: isSet(object.error) ? error_1.Error.fromJSON(object.error) : undefined,
        };
    },
    toJSON(message) {
        var _a;
        const obj = {};
        if ((_a = message.products) === null || _a === void 0 ? void 0 : _a.length) {
            obj.products = message.products.map((e) => exports.Product.toJSON(e));
        }
        if (message.error !== undefined) {
            obj.error = error_1.Error.toJSON(message.error);
        }
        return obj;
    },
    create(base) {
        return exports.GetAllProductsRes.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a;
        const message = createBaseGetAllProductsRes();
        message.products = ((_a = object.products) === null || _a === void 0 ? void 0 : _a.map((e) => exports.Product.fromPartial(e))) || [];
        message.error = (object.error !== undefined && object.error !== null) ? error_1.Error.fromPartial(object.error) : undefined;
        return message;
    },
};
exports.ProductServiceService = {
    create: {
        path: "/ProductService/create",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(exports.CreateProductReq.encode(value).finish()),
        requestDeserialize: (value) => exports.CreateProductReq.decode(value),
        responseSerialize: (value) => Buffer.from(exports.CreateProductRes.encode(value).finish()),
        responseDeserialize: (value) => exports.CreateProductRes.decode(value),
    },
    all: {
        path: "/ProductService/all",
        requestStream: false,
        responseStream: false,
        requestSerialize: (value) => Buffer.from(exports.GetAllProductsReq.encode(value).finish()),
        requestDeserialize: (value) => exports.GetAllProductsReq.decode(value),
        responseSerialize: (value) => Buffer.from(exports.GetAllProductsRes.encode(value).finish()),
        responseDeserialize: (value) => exports.GetAllProductsRes.decode(value),
    },
};
exports.ProductServiceClient = (0, grpc_js_1.makeGenericClientConstructor)(exports.ProductServiceService, "ProductService");
function toTimestamp(date) {
    const seconds = Math.trunc(date.getTime() / 1000);
    const nanos = (date.getTime() % 1000) * 1000000;
    return { seconds, nanos };
}
function fromTimestamp(t) {
    let millis = (t.seconds || 0) * 1000;
    millis += (t.nanos || 0) / 1000000;
    return new globalThis.Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof globalThis.Date) {
        return o;
    }
    else if (typeof o === "string") {
        return new globalThis.Date(o);
    }
    else {
        return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));
    }
}
function isSet(value) {
    return value !== null && value !== undefined;
}

syntax ="proto3";
//package protos;
import "google/protobuf/timestamp.proto";
import "article.proto";
import "ticket.proto";
import "error.proto";
import "address.proto";
//option experimental_allow_proto3_optional=true;

message User {

 int32 id=1;
 optional string type=2;
 optional string username=3;
  string firstname=4;
  string lastname=5;
  oneof email {
        string value = 6;
        string verified = 7;
    };
  string passwordHash=8;
  repeated Article articles =9;
  repeated Ticket tickets=10;
  Address address=11;
 optional google.protobuf.Timestamp created_at = 12;
 optional google.protobuf.Timestamp updated_at = 13;
 
 //optional repeated int32 articleIds=10
 //optional repeated int32 ticketIds=10
}

message CreateUserReq {
  User user=1;
}
message CreateUserRes{
 User user=1;
}

message GetUserIdReq {
  int32 userId=1;

}
message GetUserIdRes{
 User user=1;
 optional Error error=2;

}

message GetAllUserReq{
 optional string type=1;

}

message GetAllUserRes{
  repeated User users=1;
  optional Error error=2;

}

service UserService {
  rpc create(CreateUserReq) returns(
  CreateUserRes);
  rpc  id(GetUserIdReq) returns(GetUserIdRes);
  rpc all( GetAllUserReq)  returns ( GetAllUserRes );

}
